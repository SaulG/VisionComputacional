
import numpy as np
import Tkinter
from PIL import ImageDraw
import Image
import ImageTk
from sys import argv


def convolucion(imagen, h):
    width, height = imagen.size
    k = 3
    F = Image.new(mode='L', size=(width,height))
    imageF = F.load()
    for y in xrange(width):
        for x in xrange(height):
            sum = 0.0
            for j in xrange(k):
                for i in xrange(k):
                    zi = ( i - ( k / 2 ) )
                    zj = ( j - ( k / 2 ) )
                    try:
                        sum += f[x+zi,y+zj] * h[i,j]
                    except:
                        pass
            imageF[x,y] = int(sum)
    data = np.array(imageF)
    print data
    print data.shape
    imageF = Image.fromarray(data)
    return imageF

def filtro(original):
    width, height = original.size
    print width, height
    original = original.convert('L')
    modificado = Image.new(mode='L', size =(width,height))
    org = original.load()
    mod = modificado.load()
    contador = 0
    min = 0
    max = 0
    for y in xrange(height):
        for x in xrange(width):
            pixel = org[x,y]
            if min >= pixel:
                min = pixel
            if max <= pixel:
                max = pixel
    print "MAX:",max," MIN:",min
    for y in xrange(height):
        for x in xrange(width):
            pixel = org[x,y]
            try:
                pixel += org[x-1,y]
                contador+=1
            except:
                None
            try:
                pixel += org[x+1,y]
                contador+=1
            except:
                None
            try:
                pixel += org[x,y+1]
                contador+=1
            except:
                None
            try:
                pixel += org[x,y-1]
                contador+=1
            except:
                None
            promedio = (pixel) / (contador)
            r = max - min
            prop = 256.0 / r
            p = int((promedio -min) * prop)
            if p <= 127:
                mod[x,y] = 0
            else: 
                mod[x,y] = 255
            print mod[x,y]
            print x,y
            contador = 1
            pixel = 0
    data = np.array(modificado)
    print data
    print data.shape
    im = Image.fromarray(data)
    h = np.array([[0,0.2,0],[0.2,0.2,0.2],[0,0.2,0]])
    return convolucion(im,h)
    #return im
         
def filtroPorNumeros(im,n):
    for x in xrange(n):
        im = filtro(im)
    return im

def escalaDeGrises(im):
    width, height = im.size
    print width, height
    im = im.convert('RGB')
    pix = im.load()
    promedio = 0.0
    for y in xrange(height):
            for x in xrange(width):
                r, g, b = pix[x, y]
                promedio = (r+g+b)/3.0
                pix[x, y] = int(promedio), int(promedio), int(promedio)
    data = np.array(im)
    im2 = Image.fromarray(data)
    return im2

def main():
    imagen = Image.open(argv[1])
    original = imagen
    escalaGrises = escalaDeGrises(imagen)
    modificado = filtroPorNumeros(escalaGrises, int(argv[2]))
    root = Tkinter.Tk()
    tkimageModf = ImageTk.PhotoImage(modificado)
    tkimageOrig = ImageTk.PhotoImage(original)
    Tkinter.Label(root, image = tkimageModf).pack()
    Tkinter.Label(root, image = tkimageOrig).pack()
    root.mainloop()
main()
